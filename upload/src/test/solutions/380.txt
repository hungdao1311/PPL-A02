Program([VarDecl(Id(Hours),IntType),VarDecl(Id(Pay),IntType),FuncDecl(Id(main),[],VoidType(),[],[AssignStmt(Id(RegularRate),IntLiteral(10)),AssignStmt(Id(ExtraIncrease),IntLiteral(5)),AssignStmt(Id(DoubleIncrease),IntLiteral(5)),AssignStmt(Id(BaseHours),IntLiteral(40)),AssignStmt(Id(ExtraHours),IntLiteral(20)),AssignStmt(Id(HoursInWeek),BinaryOp(*,IntLiteral(7),IntLiteral(24))),AssignStmt(Id(DoubleTimeStart),BinaryOp(+,Id(BaseHours),Id(ExtraHours))),CallStmt(Id(Write),[StringLiteral(Enter  hours: )]),CallStmt(Id(Read),[Id(Hours)]),CallStmt(Id(WriteLn),[]),If(BinaryOp(>=,Id(Hours),IntLiteral(0)),[AssignStmt(Id(Pay),BinaryOp(*,Id(RegularRate),Id(Hours)))],[]),If(BinaryOp(>,Id(Hours),Id(BaseHours)),[AssignStmt(Id(Pay),BinaryOp(+,Id(Pay),BinaryOp(*,Id(ExtraIncrease),BinaryOp(-,Id(Hours),Id(BaseHours)))))],[]),If(BinaryOp(>,Id(Hours),Id(DoubleTimeStart)),[AssignStmt(Id(Pay),BinaryOp(+,Id(Pay),BinaryOp(*,Id(DoubleIncrease),BinaryOp(-,Id(Hours),Id(DoubleTimeStart)))))],[]),If(BinaryOp(OR,BinaryOp(<,Id(Hours),IntLiteral(0)),BinaryOp(>,Id(Hours),Id(HoursInWeek))),[AssignStmt(Id(Pay),IntLiteral(0))],[]),CallStmt(Id(WriteLn),[StringLiteral(The  gross pay is ),Id(Pay)])])])